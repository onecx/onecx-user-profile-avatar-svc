---
openapi: 3.0.3
info:
 title: user-profile-avatar internal service
 description: This API provides endpoints to manage Avatars
 version: 1.0.0
servers:
 - url: "http://onecx-user-profile-avatar:8080"
tags:
 - name: avatarInternal
   description: Managing Avatars
paths:
  /internal/avatar/{userId}:
   post:
    security:
     - oauth2: [ ocx-up:all, ocx-up:write ]
    tags:
     - avatarInternal
    description: Upload an avatar for a user by its id
    parameters:
     - in: header
       name: Content-Length
       required: true
       x-onecx:
        constraints:
         size:
          min: 1
          max: 510000
          key: avatar-image-size
       schema:
        type: integer
     - name: userId
       in: path
       required: true
       schema:
        type: string
     - name: refType
       in: query
       required: true
       schema:
        $ref: "#/components/schemas/RefType"
    operationId: uploadImage
    requestBody:
     required: true
     content:
      image/*:
       schema:
        type: string
        format: binary
    responses:
     "201":
      description: Avatar created successfully
      content:
       application/json:
        schema:
         $ref: '#/components/schemas/ImageInfo'
     "400":
      description: Bad Request
   get:
    security:
     - oauth2: [ ocx-up:all, ocx-up:read ]
    tags:
     - avatarInternal
    description: Get an avatar by the users id
    operationId: getImage
    parameters:
     - name: userId
       in: path
       required: true
       schema:
        type: string
     - name: refType
       required: true
       in: query
       schema:
        $ref: "#/components/schemas/RefType"
    responses:
     "200":
      description: Avatar retrieved successfully
      content:
       image/*:
        schema:
         type: string
         format: binary
     "400":
      description: Bad request
      content:
       application/json:
        schema:
         $ref: '#/components/schemas/ProblemDetailResponse'
   delete:
    security:
     - oauth2: [ ocx-up:all, ocx-up:delete ]
    tags:
     - avatarInternal
    description: Delete an avatar of an user by its id
    operationId: deleteImage
    parameters:
     - name: userId
       in: path
       required: true
       schema:
        type: string
    responses:
     "204":
      description: Avatar deleted successfully
     "400":
      description: Bad request
      content:
       application/json:
        schema:
         $ref: '#/components/schemas/ProblemDetailResponse'
  /internal/avatar/me:
   post:
    security:
     - oauth2: [ ocx-up:all, ocx-up:write ]
    tags:
     - avatarInternal
    description: Upload an avatar for the requesting user
    parameters:
     - in: header
       name: Content-Length
       required: true
       x-onecx:
        constraints:
         size:
          min: 1
          max: 510000
          key: avatar-image-size
       schema:
        type: integer
     - name: refType
       required: true
       in: query
       schema:
        $ref: "#/components/schemas/RefType"
    operationId: uploadMyImage
    requestBody:
     required: true
     content:
      image/*:
       schema:
        type: string
        format: binary
    responses:
     "201":
      description: Avatar created successfully
      content:
       application/json:
        schema:
         $ref: '#/components/schemas/ImageInfo'
     "400":
      description: Bad Request
   get:
    security:
     - oauth2: [ ocx-up:all, ocx-up:read ]
    tags:
     - avatarInternal
    description: Get the avatar of the requesting user
    operationId: getMyImage
    parameters:
     - name: refType
       required: true
       in: query
       schema:
        $ref: "#/components/schemas/RefType"
    responses:
     "200":
      description: Avatar retrieved successfully
      content:
       image/*:
        schema:
         type: string
         format: binary
     "400":
      description: Bad request
      content:
       application/json:
        schema:
         $ref: '#/components/schemas/ProblemDetailResponse'
   delete:
    security:
     - oauth2: [ ocx-up:all, ocx-up:delete ]
    tags:
     - avatarInternal
    description: Delete the avatar of the requesting user
    operationId: deleteMyImage
    responses:
     "204":
      description: Avatar deleted successfully
     "400":
      description: Bad request
      content:
       application/json:
        schema:
         $ref: '#/components/schemas/ProblemDetailResponse'
components:
 securitySchemes:
  oauth2:
   type: oauth2
   flows:
    clientCredentials:
     tokenUrl: https://oauth.simple.api/token
     scopes:
      ocx-up:all: Grants access to all operations
      ocx-up:read: Grants read access
      ocx-up:write: Grants write access
      ocx-up:delete: Grants access to delete operations
 schemas:
  RefType:
   type: string
   enum: [ small, medium, large ]
   default: 'medium'
  ImageInfo:
   type: object
   properties:
    id:
     type: string
  ProblemDetailResponse:
   type: object
   properties:
    errorCode:
     type: string
    detail:
     type: string
    params:
     type: array
     items:
      $ref: '#/components/schemas/ProblemDetailParam'
    invalidParams:
     type: array
     items:
      $ref: '#/components/schemas/ProblemDetailInvalidParam'
  ProblemDetailParam:
   type: object
   properties:
    key:
     type: string
    value:
     type: string
  ProblemDetailInvalidParam:
   type: object
   properties:
    name:
     type: string
    message:
     type: string